# eventflex-web-pipeline.yml
trigger:
  branches:
    include:
      - main
  paths:
    include:
      - eventflex-web/**
      - k8s/eventflex-web/**

variables:
  containerRegistry: 'eventflex.azurecr.io'
  imageRepository: 'eventflex-web'
  dockerfilePath: 'eventflex-web/Dockerfile'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and Push Stage
  jobs:
  - job: Build
    displayName: Build Job
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and Push
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: dockerRegistryServiceConnection
        tags: |
          $(tag)
          latest

- stage: Deploy
  displayName: Deploy Stage
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: Deploy Job
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: KubernetesManifest@0
      displayName: Create image pull secret
      inputs:
        action: createSecret
        secretName: acr-auth
        namespace: default
        dockerRegistryEndpoint: dockerRegistryServiceConnection

    - task: KubernetesManifest@0
      displayName: Deploy to Kubernetes
      inputs:
        action: deploy
        namespace: default
        manifests: |
          k8s/eventflex-web/deployment.yaml
          k8s/eventflex-web/service.yaml
          k8s/eventflex-web/ingress.yaml
        containers: $(containerRegistry)/$(imageRepository):$(tag)